version: '3.9'

services:
  frontend:
    container_name: frontend
    build: ./frontend
    volumes:
      - ./frontend/:/app
      - /app/node_modules
    ports:
      - '${REACT_SYSTEM_PORT}:${REACT_TARGET_PORT}'
    stdin_open: true
    tty: true
    environment:
      - WATCHPACK_POLLING=true
      - VITE_AUTH0_DOMAIN=${AUTH0_DOMAIN}
      - VITE_AUTH0_CLIENT_ID=${AUTH0_CLIENT_ID}
      - VITE_AUTH0_SCOPE=${AUTH0_SCOPE}
      - VITE_AUTH0_AUDIENCE=${AUTH0_AUDIENCE}
    networks:
      - network-meal-booking-application

  api:
    container_name: api
    build: ./api
    volumes:
      - ./api/:/app
      - /app/node_modules
    ports:
      - '${EXPRESS_TARGET_PORT}:${EXPRESS_SYSTEM_PORT}'
    environment:
      - EXPRESS_SYSTEM_PORT=${EXPRESS_SYSTEM_PORT}
      - DB_URI=${DB_URI}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_USER=${DB_USER}
      - DB_NAME=${DB_NAME}
      - DB_DIALECT=${DB_DIALECT}
      - VITE_AUTH0_DOMAIN=${AUTH0_DOMAIN}
      - VITE_AUTH0_AUDIENCE=${AUTH0_AUDIENCE}

    networks:
      - network-meal-booking-application

  database:
    container_name: database
    build: ./database
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    restart: always
    volumes:
      - database_data:/var/lib/postgresql/data
      - ./database/scripts/:/docker-entrypoint-initdb.d/
      - ./database/scripts:/scripts
    ports:
      - "${DB_TARGET_PORT}:${DB_SYSTEM_PORT}"
    networks:
      - network-meal-booking-application

volumes:
  database_data:
    driver: local

networks:
  network-meal-booking-application:
